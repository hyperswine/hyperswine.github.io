"use strict";(self.webpackChunkprojects=self.webpackChunkprojects||[]).push([[5851],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>f});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var c=a.createContext({}),p=function(e){var t=a.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},s=function(e){var t=p(e.components);return a.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),m=p(r),f=n,g=m["".concat(c,".").concat(f)]||m[f]||u[f]||o;return r?a.createElement(g,i(i({ref:t},s),{},{components:r})):a.createElement(g,i({ref:t},s))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:n,i[1]=l;for(var p=2;p<o;p++)i[p]=r[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},9671:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var a=r(7462),n=(r(7294),r(3905));const o={layout:"post",title:"Data Structures and Algorithms for Declarative Programming"},i=void 0,l={permalink:"/blog/2023/08/01/data-structures-declarative",source:"@site/blog/2023-08-01-data-structures-declarative.md",title:"Data Structures and Algorithms for Declarative Programming",description:"Declarative programming usually involves functional or logic programming. For functional programming...",date:"2023-08-01T00:00:00.000Z",formattedDate:"August 1, 2023",tags:[],readingTime:.485,hasTruncateMarker:!1,authors:[],frontMatter:{layout:"post",title:"Data Structures and Algorithms for Declarative Programming"},prevItem:{title:"Arkology",permalink:"/blog/2023/08/09/Arkology"},nextItem:{title:"Assymetric Distribution of Life in the Universe",permalink:"/blog/2023/07/31/asymmetric-distribution-life"}},c={authorsImageUrls:[]},p=[],s={toc:p};function u(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"Declarative programming usually involves functional or logic programming. For functional programming..."),(0,n.kt)("p",null,"The basics:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-hs"},"data List a = Empty | Node a (List a)\n\ndata BinaryTree a = Empty | Node a (Tree a) (Tree a)\n\ntype AssociationList k v = [(k, v)]\n\n-- basically an adjacency list. Could also use a map\ntype Graph a = [(a, [a])]\ntype Graph2 a = Map a [a]\n")),(0,n.kt)("p",null,"How does haskell implement data structures?"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-hs"},"-- a binary balanced tree\ndata Map k v = Bin Size k v (Map k v) (Map k v) | Tip\n")))}u.isMDXComponent=!0}}]);