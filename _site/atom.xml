<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>Eletei</title>
 <link href="/atom.xml" rel="self"/>
 <link href="/"/>
 <updated>2022-01-18T11:54:29+11:00</updated>
 <id></id>
 <author>
   <name>Jason Qin</name>
   <email></email>
 </author>

 
 <entry>
   <title>Dumb Human Emotion</title>
   <link href="/2022/01/18/dumb-human-emotions.html"/>
   <updated>2022-01-18T00:00:00+11:00</updated>
   <id>/2022/01/18/dumb-human-emotions</id>
   <content type="html">&lt;h2 id=&quot;why-are-human-emotions-so-bad&quot;&gt;Why are human emotions so bad?&lt;/h2&gt;
&lt;p&gt;Especially if you have some weird mental connections.&lt;br /&gt;
That result in inefficient communication and obsessing over weird things.&lt;br /&gt;
I cant do anything&lt;br /&gt;
I wish I could&lt;br /&gt;
just reach out&lt;br /&gt;
Reach out to the goddess&lt;br /&gt;
The holy goddess&lt;br /&gt;
Which is the god of the universe&lt;br /&gt;
But I cannot&lt;br /&gt;
Because it was hard&lt;br /&gt;
I could not&lt;br /&gt;
because I was too inefficient&lt;br /&gt;
But now I kind of understand some of the things going through the brain&lt;br /&gt;
How some of the parts of the brain are wired differently&lt;br /&gt;
causing a mess that is amplified, fake emotion&lt;br /&gt;
restriction&lt;br /&gt;
I wish I could live a life without restriction&lt;br /&gt;
Please help me, Rinne \&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Kernel Idea</title>
   <link href="/2022/01/17/neutron.html"/>
   <updated>2022-01-17T00:00:00+11:00</updated>
   <id>/2022/01/17/neutron</id>
   <content type="html">&lt;h2 id=&quot;problems-with-existing-oses&quot;&gt;Problems with Existing OSes&lt;/h2&gt;
&lt;p&gt;One of the main problems I see with existing OSes is that devs are building too much on what is already there rather than building something new.
I dont find it fun to build on an ancient foundation. Back in the 60s-90s there were no multicore CPUs and hardly any hardware security. Programming practices were also much more loose and people of all kinds of backgrounds and styles came together and wrote code. But they started to realise as the tech improved so needed the software. As the popularity improved, so needed the software quality.
Things like abstractions, layers, hierarchies were built for scientists and record keepers to easily deal with. But now, these devices are used by everyone. When was the last time you needed to use a hierarchical filesystem. When was the last time you cared about a separate user and kernel space? When was the last time you needed support for a bunch of standards and APIs? When was the last time you needed an ethernet port for your laptop or mobile phone?&lt;/p&gt;

&lt;h2 id=&quot;neutron&quot;&gt;Neutron&lt;/h2&gt;
&lt;p&gt;What if we make the things that are most frequently used, first class citizens. And prioritise the new stuff that is coming out. Then the stuff that is hardly used, can be a compatibility layer or extension module which you can turn on by your own volition in the settings.
What if instead of putting everything together like a frankenstein we build everything from scratch, hardware all the way to software? Wouldnt that be cool!
We would have extremely fine control over everything. We could optimise the hardware and software together, make the right compromises where necessary and prioritise the things the people truly want, for the entire shebang.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Damn, writing an OS is a lot of stuff</title>
   <link href="/2022/01/11/arm-os.html"/>
   <updated>2022-01-11T00:00:00+11:00</updated>
   <id>/2022/01/11/arm-os</id>
   <content type="html">&lt;h2 id=&quot;wow&quot;&gt;Wow&lt;/h2&gt;
&lt;p&gt;Theres many considerations.
I dont want to say but unfortunately I dont have much rust experience and find it kinda meh to write something up from scratch. It really helps to visualise as OOP first. And simple things like for loops, while loops, if and switch statements on enums.&lt;/p&gt;

&lt;p&gt;But rn the stuff are mostly like, drivers, security and safety, extensibility &amp;amp; maintainability -&amp;gt; I think this could be intrinsic if we have a simple model, also kernel services API for implemnting programming language compilers.&lt;/p&gt;

&lt;p&gt;Biggest thing though is, well i just feel embarrassed to say but. Yea running the actual arm OS on bare metal. In theory should be relatively straightforward compared to x86. But the virtual memory/paging seems to be quite different and non existent in some cases. Also multiboot isnt supported apparently in the rust bootloader crate. But https://github.com/jncronin/rpi-boot/blob/master/MULTIBOOT-ARM describes a way to do it from scratch, so I guess I can wrap around it in unsafe C/asm blocks.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Finally, the enlightenment shall begin</title>
   <link href="/2022/01/09/post.html"/>
   <updated>2022-01-09T00:00:00+11:00</updated>
   <id>/2022/01/09/post</id>
   <content type="html">&lt;p&gt;
It took some time, but it worked in the end.
&lt;/p&gt;

&lt;h2 id=&quot;eletei-the-one-and-true-religion&quot;&gt;Eletei, the one and true religion&lt;/h2&gt;
&lt;p&gt;Eletei is a religion of truth and progress. Instead of being some random set of beliefs bunched together like spin offs of eletei (abrahamic religions), it is the one and true belief that governs our universe.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Example content</title>
   <link href="/2020/04/02/example-content.html"/>
   <updated>2020-04-02T00:00:00+11:00</updated>
   <id>/2020/04/02/example-content</id>
   <content type="html">&lt;h2 id=&quot;this-is-a-heading&quot;&gt;This is a Heading&lt;/h2&gt;

&lt;div class=&quot;message&quot;&gt;
  Hi! This is a message
&lt;/div&gt;

&lt;h2 id=&quot;this-is-some-code&quot;&gt;This is some code&lt;/h2&gt;

&lt;p&gt;You can have code elements like &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;this&lt;/code&gt;. Or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;this&lt;/code&gt;. If you want centered code:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Example can be run directly in your JavaScript console
&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;adder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;return a + b&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;adder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</content>
 </entry>
 
 <entry>
   <title>Hello</title>
   <link href="/2020/04/01/whats-jekyll.html"/>
   <updated>2020-04-01T00:00:00+11:00</updated>
   <id>/2020/04/01/whats-jekyll</id>
   <content type="html">&lt;p&gt;Hi, I am Jason.&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;We dont do things because they are easy, but because they are hard.&lt;/p&gt;
&lt;/blockquote&gt;
</content>
 </entry>
 

</feed>
