I"í<h2 id="problems-with-existing-oses">Problems with Existing OSes</h2>
<p>One of the main problems I see with existing OSes is that devs are building too much on what is already there rather than building something new.
I dont find it fun to build on an ancient foundation. Back in the 60s-90s there were no multicore CPUs and hardly any hardware security. Programming practices were also much more loose and people of all kinds of backgrounds and styles came together and wrote code. But they started to realise as the tech improved so needed the software. As the popularity improved, so needed the software quality.
Things like abstractions, layers, hierarchies were built for scientists and record keepers to easily deal with. But now, these devices are used by everyone. When was the last time you needed to use a hierarchical filesystem. When was the last time you cared about a separate user and kernel space? When was the last time you needed support for a bunch of standards and APIs? When was the last time you needed an ethernet port for your laptop or mobile phone?</p>

<h2 id="neutron">Neutron</h2>
<p>What if we make the things that are most frequently used, first class citizens. And prioritise the new stuff that is coming out. Then the stuff that is hardly used, can be a compatibility layer or extension module which you can turn on by your own volition in the settings.
What if instead of putting everything together like a frankenstein we build everything from scratch, hardware all the way to software? Wouldnt that be cool!
We would have extremely fine control over everything. We could optimise the hardware and software together, make the right compromises where necessary and prioritise the things the people truly want, for the entire shebang.</p>
:ET